Stonehenge has been incubating since December 2008 Stonehenge a set of example applications for Service Oriented Architecture that spans languages and platforms and demonstrates best practices and interoperability by using currently defined W3C OASIS standard protocols.Since the last report in August, the Stonehenge project has been making progress towards, and clarifying the scope of an M2 release with improvements to the first sample application centered on both a unified configuration system, and a claims-based security model. As part of the efforts towards an M2 release, a Sun Metro based implementation of the StockTrader sample was added to the trunk.Community.Since the last report, about 2 new developers have joined and actively contributed code in the form bug fixes and new functionality, as well as documentation. Apache Stonehenge was demonstrated at the NYC .NET Developers Group, the NYC Connected Systems User Group, ApacheCon, and Microsoft's PDC 2009.M2.Progress has been steady towards an M2 release. There is on-going work on a claims-based security system that adds a passive and active STS in select implementations of the StockTrader sample application. Interoperability testing is currently underway on this new functionality. As documentation is a key part to this project we've completely revampted out CWiki site to accommodate future samples. Currently there are 19 open JIRA issues marked as M2.M3.As mentioned in the August 2009 Report M3 would consist of either adding more interoperability features to StockTrader or implementing new sample applications. The latter is currently the focus, and the community is focusing on creating "micro samples" for many common WS- scenarios, with the goal being around creating implementations with low barriers to entry. Discussions are in progress about testing frameworks and scenarios of interest.Graduation Map.Grow community around new claims based stocktrader implementations just added.More thorough documentation that empowers developers to replicate interoperability scenarios demonstrated.Demonstrate full interoperability between existing components, and release.Signed off by mentor:.