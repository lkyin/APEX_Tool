Tashi has been incubating since September 2008.The Tashi project aims to build a software infrastructure for cloud.computing on massive internet-scale datasets (what we call Big Data.The idea is to build a cluster management system that enables the Big.Data that are stored in a cluster/data center to be accessed, shared,.manipulated, and computed on by remote users in a convenient, efficient,.and safe manner.Tashi originally encompassed just the tools to manage virtual machines.using Xen and QEMU, but has been merged with Zoni, which manages the.physical aspects of a cluster like power control, network settings and.handing out physical machines.In the period from April to July, the project did not ask to make.another incubating release, but is ready to start the process for a new.release incorporating the development efforts of this period.Development efforts this period have included making user actions.display assurance messages via the client in case of successful.operations, extending the SQL database backend to support all Instance.and Host fields that are already recorded via the alternative "pickled".backend.The primitive scheduler gained additional resilience to refrain from.scheduling load on hosts that are down transiently. The node manager.service now tries to ensure that undelivered messages to the cluster.manager are resubmitted regularly. Virtual machine migration was revised.to ensure stale state wasn't being shadowed by new data, only to.reappear when the migrated VM was shut down.The code underwent a complete automatic analysis, fixing several issues.Furthermore, a few other minor additions, fixes and documentation.updates were made.The project has received code contributions from two non-committers in.this period. MIMOS via Luke Jing Yuan have contributed "convertz" to the.code base, a utility to convert a VM image to an image deployable to a.physical machine provisioned by Zoni. Alexey Tumanov of CMU provided a.communications timeout wrapper to handle the problem of threads hanging.forever, trying to communicate over a broken network connection.Upcoming software goals are to separate the client into an.administrative and a user interface, to investigate what is needed to.support IPv6, replace RPyC, and to provide the ability to hand out.server slices (operating system level virtualization Besides CPU and.memory, disk storage should also be a schedulable resource.The project has a user community, but it is small. Growth mostly has.happened by word of mouth. To show potential users at large the utility.of this project, the author of this report is creating web pages to.demonstrate how to accomplish distributed computing tasks. Base images.of (free) OS installs will be provided to allow new users to get started.quickly. Hopefully this will increase visibility of the project.Items to be resolved before graduation:. - Generate more publicity for the project. - Develop members of the user community to submit feature extensions.Signed off by mentor:.Shepherd: Jukka Zitting.